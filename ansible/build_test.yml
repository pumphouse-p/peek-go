---
- name: "CI build/test : {{ app_name }}"
  hosts: all
  become: false
  vars_files:
    - ci_vars.yml

  tasks:
    - name: Create workspace directory
      ansible.builtin.file:
        path: "{{ golang_workspace }}/go/src"
        state: directory
        mode: 0755

    - name: Ensure clean app workspace
      ansible.builtin.file:
        path: "{{ golang_app_workspace }}"
        state: absent

    - name: Clone repository
      ansible.builtin.git:
        repo: "{{ app_repo_url }}"
        dest: "{{ golang_app_workspace }}"
        version: "{{ app_repo_branch }}"
        refspec: "{{ app_repo_refspec }}"
      register: _app_repo

    - name: "Build : {{ app_name }}"
      containers.podman.podman_container:
        name: "{{ build_container_name }}"
        image: "{{ build_container_image }}"
        volume:
          - "{{ golang_app_workspace }}:/usr/src/{{ app_name }}:Z"
        workdir: /usr/src/{{ app_name }}/cmd/peek-go
        command: go build -v
        state: started
        interactive: true
        tty: true
        recreate: true
      register: build_container

    - name: "Wait for build to complete"
      wait_for:
        path: "{{ golang_app_workspace }}/cmd/peek-go/peek-go"
        timeout: 30

    - name: "Collect logs from {{ build_container_name }}"
      ansible.builtin.command:
        cmd: podman logs {{ build_container_name }}
      changed_when: false
      register: build_container_logs

    - name: "Output build container logs"
      ansible.builtin.debug:
        msg: "{{ build_container_logs.stdout.split('\n') }}"

    - name: "Run tests : {{ app_name }}"
      containers.podman.podman_container:
        name: "{{ test_container_name }}"
        image: "{{ build_container_image }}"
        volume:
          - "{{ golang_app_workspace }}:/usr/src/{{ app_name }}:Z"
        workdir: /usr/src/{{ app_name }}
        command: go test -v ./...
        state: started
        interactive: true
        tty: true
        recreate: true
      register: test_container

    - name: "Wait for tests to complete"
      containers.podman.podman_container_info:
        name: "{{ test_container_name }}"
      register: test_container_status
      retries: 10
      delay: 5
      until: test_container_status.containers.0.State.Running is false

    - name: "Collect logs from {{ test_container_name }}"
      ansible.builtin.command:
        cmd: podman logs {{ test_container_name }}
      changed_when: false
      register: test_container_logs

    - name: "Output test container logs"
      ansible.builtin.debug:
        msg: "{{ test_container_logs.stdout.split('\n') }}"

    - name: "Set stats for downstream consumption"
      ansible.builtin.set_stats:
        data:
          _app_repo: "{{ _app_repo }}"
